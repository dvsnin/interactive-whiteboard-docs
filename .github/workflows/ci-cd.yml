name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build docker image
        run: docker build -t myapp:latest .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tests
        run: go test ./software_engineering -v

  deploy-dev:
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: dev
    steps:
      - name: Fake deploy to dev
        run: |
          echo "Deploying to DEV environment..."
          sleep 2
          echo "Dev deploy complete!"

  deploy-prod:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
    steps:
      - name: Fake deploy to production
        run: |
          echo "Deploying to PRODUCTION..."
          sleep 3
          echo "Production deploy complete!"

      - name: Get short SHA
        id: vars
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Find associated PR
        id: find_pr
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Telegram
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          format: markdown
          message: |
            **Release**
            Date: ${{ github.event.head_commit.timestamp }}
            MR: [#${{ steps.find_pr.outputs.number }}](${{ steps.find_pr.outputs.url }})
            Pipeline: [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            Author: [${{ github.actor }}](https://github.com/${{ github.actor }})